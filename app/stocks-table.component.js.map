{"version":3,"file":"stocks-table.component.js","sourceRoot":"","sources":["stocks-table.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuD,eAAe,CAAC,CAAA;AAKvE,QAAO,gCAAgC,CAAC,CAAA;AACxC,QAAO,wCAAwC,CAAC,CAAA;AAChD,QAAO,6BAA6B,CAAC,CAAA;AAIrC;;GAEG;AAMH;IAAA;QAWE,yFAAyF;QAC/E,kBAAa,GAAG,IAAI,mBAAY,EAAE,CAAC;IAK/C,CAAC;IAHC,yCAAO,GAAP,UAAQ,KAAY;QAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAbD;QAAC,YAAK,EAAE;;2DAAA;IAGR;QAAC,YAAK,EAAE;;+DAAA;IAGR;QAAC,YAAK,EAAE;;yDAAA;IAGR;QAAC,aAAM,EAAE;;kEAAA;IAjBX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,6BAA6B;SAC3C,CAAC;;+BAAA;IAkBF,8BAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,+BAAuB,0BAiBnC,CAAA","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Control } from '@angular/common';\nimport { StockService} from './stock.service';\nimport { Stock} from './stock';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\n\nimport { ChartComponent } from './chart.component';\n\n/**\n * Renders a table with stocks where the first column is an action\n */\n@Component({\n  moduleId: module.id,\n  selector: 'stocks-table',\n  templateUrl: 'stocks-table.component.html',\n})\nexport class StocksTableAppComponent {\n  \n  // stocks to visualize\n  @Input() stocks:Stock[];\n  \n  // bootstrap button color used for the action, e.g., 'danger' or 'success'\n  @Input() buttonType:string;\n  \n  // glyphicon to use - e.g. 'remove' will generate a 'glyphicon-remove'\n  @Input() icon:string;\n  \n  // fires an event if the user clicks on the action column. The event object is the stock.\n  @Output() actionClicked = new EventEmitter();\n  \n  onClick(stock: Stock):void {\n      this.actionClicked.emit(stock);\n  }  \n}\n"]}